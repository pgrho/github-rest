using System;
using Xunit;

namespace Shipwreck.GithubClient.Events
{
    public sealed class StatusEventPayloadTest : ActivityPayloadTest
    {
        [Fact]
        public void SampleDataTest()
        {
            var actual = ReadAs<StatusEventPayload>("StatusEvent.json");
            Assert.Equal(214015194, actual.Id);
            Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Sha);
            Assert.Equal("baxterthehacker/public-repo", actual.Name);
            Assert.Equal(null, actual.TargetUrl);
            Assert.Equal("default", actual.Context);
            Assert.Equal(null, actual.Description);
            Assert.Equal(CommitState.Success, actual.State);
            Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Sha);
            //TODO:Assert.Equal("baxterthehacker", actual.Commit.Commit.Author.Name);
            //Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commit.Commit.Author.Email);
            //Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Commit.Commit.Author.Date);
            //Assert.Equal("baxterthehacker", actual.Commit.Commit.Committer.Name);
            //Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commit.Commit.Committer.Email);
            //Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Commit.Commit.Committer.Date);
            //Assert.Equal("Initial commit", actual.Commit.Commit.Message);
            //Assert.Equal("02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0", actual.Commit.Commit.Tree.Sha);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees/02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0", actual.Commit.Commit.Tree.Url);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Commit.Url);
            //Assert.Equal(1, actual.Commit.Commit.CommentCount);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Url);
            //Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.HtmlUrl);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b/comments", actual.Commit.CommentsUrl);
            //Assert.Equal("baxterthehacker", actual.Commit.Author.Login);
            //Assert.Equal(6752317, actual.Commit.Author.Id);
            //Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Commit.Author.AvatarUrl);
            //Assert.Equal("", actual.Commit.Author.GravatarId);
            //Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Commit.Author.Url);
            //Assert.Equal("https://github.com/baxterthehacker", actual.Commit.Author.HtmlUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Commit.Author.FollowersUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Commit.Author.FollowingUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Commit.Author.GistsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Commit.Author.StarredUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Commit.Author.SubscriptionsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Commit.Author.OrganizationsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Commit.Author.ReposUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Commit.Author.EventsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Commit.Author.ReceivedEventsUrl);
            //Assert.Equal(AccountType.User, actual.Commit.Author.Type);
            //Assert.Equal(false, actual.Commit.Author.SiteAdmin);
            //Assert.Equal("baxterthehacker", actual.Commit.Committer.Login);
            //Assert.Equal(6752317, actual.Commit.Committer.Id);
            //Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Commit.Committer.AvatarUrl);
            //Assert.Equal("", actual.Commit.Committer.GravatarId);
            //Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Commit.Committer.Url);
            //Assert.Equal("https://github.com/baxterthehacker", actual.Commit.Committer.HtmlUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Commit.Committer.FollowersUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Commit.Committer.FollowingUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Commit.Committer.GistsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Commit.Committer.StarredUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Commit.Committer.SubscriptionsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Commit.Committer.OrganizationsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Commit.Committer.ReposUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Commit.Committer.EventsUrl);
            //Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Commit.Committer.ReceivedEventsUrl);
            //Assert.Equal(AccountType.User, actual.Commit.Committer.Type);
            //Assert.Equal(false, actual.Commit.Committer.SiteAdmin);
            //Assert.Equal("master", actual.Branches[0].Name);
            //Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Branches[0].Commit.Sha);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Branches[0].Commit.Url);
            //Assert.Equal("changes", actual.Branches[1].Name);
            //Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Branches[1].Commit.Sha);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Branches[1].Commit.Url);
            //Assert.Equal("gh-pages", actual.Branches[2].Name);
            //Assert.Equal("b11bb7545ac14abafc6191a0481b0d961e7793c6", actual.Branches[2].Commit.Sha);
            //Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/b11bb7545ac14abafc6191a0481b0d961e7793c6", actual.Branches[2].Commit.Url);
            //Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.CreatedAt);
            //Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.UpdatedAt);
            Assert.Equal(35129377, actual.Repository.Id);
            Assert.Equal("public-repo", actual.Repository.Name);
            Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
            Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
            Assert.Equal(6752317, actual.Repository.Owner.Id);
            Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
            Assert.Equal("", actual.Repository.Owner.GravatarId);
            Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
            Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
            Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
            Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
            Assert.Equal(false, actual.Repository.Private);
            Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
            Assert.Equal("", actual.Repository.Description);
            Assert.Equal(false, actual.Repository.Fork);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
            Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
            Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
            Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.Repository.PushedAt);
            Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
            Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
            Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
            Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
            Assert.Equal(null, actual.Repository.Homepage);
            Assert.Equal(0, actual.Repository.Size);
            Assert.Equal(0, actual.Repository.StargazersCount);
            Assert.Equal(0, actual.Repository.WatchersCount);
            Assert.Equal(null, actual.Repository.Language);
            Assert.Equal(true, actual.Repository.HasIssues);
            Assert.Equal(true, actual.Repository.HasDownloads);
            Assert.Equal(true, actual.Repository.HasWiki);
            Assert.Equal(true, actual.Repository.HasPages);
            Assert.Equal(0, actual.Repository.ForksCount);
            Assert.Equal(null, actual.Repository.MirrorUrl);
            Assert.Equal(2, actual.Repository.OpenIssuesCount);
            Assert.Equal(0, actual.Repository.Forks);
            Assert.Equal(2, actual.Repository.OpenIssues);
            Assert.Equal(0, actual.Repository.Watchers);
            Assert.Equal("master", actual.Repository.DefaultBranch);
            Assert.Equal("baxterthehacker", actual.Sender.Login);
            Assert.Equal(6752317, actual.Sender.Id);
            Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
            Assert.Equal("", actual.Sender.GravatarId);
            Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
            Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
            Assert.Equal(AccountType.User, actual.Sender.Type);
            Assert.Equal(false, actual.Sender.SiteAdmin);
        }

        // TODO: public sealed class TeamAddEventPayloadTest : ActivityPayloadTest
        //{
        //    [Fact]
        //    public void SampleDataTest()
        //    {
        //        var actual = ReadAs<TeamAddEventPayload>("TeamAddEvent.json");
        //        Assert.Equal("github", actual.Team.Name);
        //        Assert.Equal(836012, actual.Team.Id);
        //        Assert.Equal("github", actual.Team.Slug);
        //        Assert.Equal("", actual.Team.Description);
        //        Assert.Equal("pull", actual.Team.Permission);
        //        Assert.Equal("https://api.github.com/teams/836012", actual.Team.Url);
        //        Assert.Equal("https://api.github.com/teams/836012/members{/member}", actual.Team.MembersUrl);
        //        Assert.Equal("https://api.github.com/teams/836012/repos", actual.Team.RepositoriesUrl);
        //        Assert.Equal(35129393, actual.Repository.Id);
        //        Assert.Equal("public-repo", actual.Repository.Name);
        //        Assert.Equal("baxterandthehackers/public-repo", actual.Repository.FullName);
        //        Assert.Equal("baxterandthehackers", actual.Repository.Owner.Login);
        //        Assert.Equal(7649605, actual.Repository.Owner.Id);
        //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Repository.Owner.AvatarUrl);
        //        Assert.Equal("", actual.Repository.Owner.GravatarId);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Repository.Owner.Url);
        //        Assert.Equal("https://github.com/baxterandthehackers", actual.Repository.Owner.HtmlUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Repository.Owner.FollowersUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Repository.Owner.FollowingUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Repository.Owner.OrganizationsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Repository.Owner.ReposUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Repository.Owner.EventsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Repository.Owner.ReceivedEventsUrl);
        //        Assert.Equal(AccountType.Organization, actual.Repository.Owner.Type);
        //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
        //        Assert.Equal(false, actual.Repository.Private);
        //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.HtmlUrl);
        //        Assert.Equal("", actual.Repository.Description);
        //        Assert.Equal(true, actual.Repository.Fork);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo", actual.Repository.Url);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/forks", actual.Repository.ForksUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/teams", actual.Repository.TeamsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/hooks", actual.Repository.HooksUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/events", actual.Repository.EventsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/tags", actual.Repository.TagsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/languages", actual.Repository.LanguagesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/stargazers", actual.Repository.StargazersUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contributors", actual.Repository.ContributorsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscribers", actual.Repository.SubscribersUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscription", actual.Repository.SubscriptionUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}", actual.Repository.CommentsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/merges", actual.Repository.MergesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/downloads", actual.Repository.DownloadsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}", actual.Repository.IssuesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}", actual.Repository.PullsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}", actual.Repository.LabelsUrl);
        //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
        //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.CreatedAt);
        //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
        //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
        //        Assert.Equal("git://github.com/baxterandthehackers/public-repo.git", actual.Repository.GitUrl);
        //        Assert.Equal("git@github.com:baxterandthehackers/public-repo.git", actual.Repository.SshUrl);
        //        Assert.Equal("https://github.com/baxterandthehackers/public-repo.git", actual.Repository.CloneUrl);
        //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.SvnUrl);
        //        Assert.Equal(null, actual.Repository.Homepage);
        //        Assert.Equal(0, actual.Repository.Size);
        //        Assert.Equal(0, actual.Repository.StargazersCount);
        //        Assert.Equal(0, actual.Repository.WatchersCount);
        //        Assert.Equal(null, actual.Repository.Language);
        //        Assert.Equal(false, actual.Repository.HasIssues);
        //        Assert.Equal(true, actual.Repository.HasDownloads);
        //        Assert.Equal(true, actual.Repository.HasWiki);
        //        Assert.Equal(true, actual.Repository.HasPages);
        //        Assert.Equal(0, actual.Repository.ForksCount);
        //        Assert.Equal(null, actual.Repository.MirrorUrl);
        //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
        //        Assert.Equal(0, actual.Repository.Forks);
        //        Assert.Equal(0, actual.Repository.OpenIssues);
        //        Assert.Equal(0, actual.Repository.Watchers);
        //        Assert.Equal("master", actual.Repository.DefaultBranch);
        //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
        //        Assert.Equal(7649605, actual.Organization.Id);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
        //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Organization.AvatarUrl);
        //        Assert.Equal(null, actual.Organization.Description);
        //        Assert.Equal("baxterandthehackers", actual.Sender.Login);
        //        Assert.Equal(7649605, actual.Sender.Id);
        //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
        //        Assert.Equal("", actual.Sender.GravatarId);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Sender.Url);
        //        Assert.Equal("https://github.com/baxterandthehackers", actual.Sender.HtmlUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Sender.FollowersUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Sender.FollowingUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Sender.GistsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Sender.StarredUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Sender.SubscriptionsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Sender.OrganizationsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Sender.ReposUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Sender.EventsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Sender.ReceivedEventsUrl);
        //        Assert.Equal(AccountType.Organization, actual.Sender.Type);
        //        Assert.Equal(false, actual.Sender.SiteAdmin);
        //    }
        //}

        // TODO: public sealed class TeamEventPayloadTest : ActivityPayloadTest
        //{
        //    [Fact]
        //    public void SampleDataTest()
        //    {
        //        var actual = ReadAs<TeamEventPayload>("TeamEvent.json");
        //        Assert.Equal(EditAction.Created, actual.Action);
        //        Assert.Equal("team baxter", actual.Team.Name);
        //        Assert.Equal(2175394, actual.Team.Id);
        //        Assert.Equal("team-baxter", actual.Team.Slug);
        //        Assert.Equal("", actual.Team.Description);
        //        Assert.Equal("secret", actual.Team.Privacy);
        //        Assert.Equal("https:/api.github.com/teams/2175394", actual.Team.Url);
        //        Assert.Equal("https:/api.github.com/teams/2175394/members{/member}", actual.Team.MembersUrl);
        //        Assert.Equal("https:/api.github.com/teams/2175394/repos", actual.Team.RepositoriesUrl);
        //        Assert.Equal("pull", actual.Team.Permission);
        //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
        //        Assert.Equal(4312013, actual.Organization.Id);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
        //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
        //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
        //        Assert.Equal("", actual.Organization.Description);
        //        Assert.Equal("baxterthehacker", actual.Sender.Login);
        //        Assert.Equal(6752317, actual.Sender.Id);
        //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
        //        Assert.Equal("", actual.Sender.GravatarId);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
        //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
        //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
        //        Assert.Equal(AccountType.User, actual.Sender.Type);
        //        Assert.Equal(false, actual.Sender.SiteAdmin);
        //    }
        //}
    }
}
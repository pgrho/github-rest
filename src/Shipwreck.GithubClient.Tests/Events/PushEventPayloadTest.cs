using System;
using Xunit;

namespace Shipwreck.GithubClient.Events
{
    public sealed class PushEventPayloadTest : ActivityPayloadTest
    {
        [Fact]
        public void SampleDataTest()
        {
            var actual = ReadAs<PushEventPayload>("PushEvent.json");
            Assert.Equal("refs/heads/changes", actual.Ref);
            Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Before);
            Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.After);
            Assert.Equal(false, actual.Created);
            Assert.Equal(false, actual.Deleted);
            Assert.Equal(false, actual.Forced);
            Assert.Equal(null, actual.BaseRef);
            Assert.Equal("https://github.com/baxterthehacker/public-repo/compare/9049f1265b7d...0d1a26e67d8f", actual.Compare);
            Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Commits[0].Id);
            Assert.Equal("f9d2a07e9488b91af2641b26b9407fe22a451433", actual.Commits[0].TreeId);
            Assert.Equal(true, actual.Commits[0].Distinct);
            Assert.Equal("Update README.md", actual.Commits[0].Message);
            Assert.Equal(DateTimeOffset.Parse("2015-05-05T19:40:15-04:00"), actual.Commits[0].Timestamp);
            Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Commits[0].Url);
            Assert.Equal("baxterthehacker", actual.Commits[0].Author.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commits[0].Author.Email);
            Assert.Equal("baxterthehacker", actual.Commits[0].Author.Username);
            Assert.Equal("baxterthehacker", actual.Commits[0].Committer.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commits[0].Committer.Email);
            Assert.Equal("baxterthehacker", actual.Commits[0].Committer.Username);
            Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.HeadCommit.Id);
            Assert.Equal("f9d2a07e9488b91af2641b26b9407fe22a451433", actual.HeadCommit.TreeId);
            Assert.Equal(true, actual.HeadCommit.Distinct);
            Assert.Equal("Update README.md", actual.HeadCommit.Message);
            Assert.Equal(DateTimeOffset.Parse("2015-05-05T19:40:15-04:00"), actual.HeadCommit.Timestamp);
            Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.HeadCommit.Url);
            Assert.Equal("baxterthehacker", actual.HeadCommit.Author.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.HeadCommit.Author.Email);
            Assert.Equal("baxterthehacker", actual.HeadCommit.Author.Username);
            Assert.Equal("baxterthehacker", actual.HeadCommit.Committer.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.HeadCommit.Committer.Email);
            Assert.Equal("baxterthehacker", actual.HeadCommit.Committer.Username);
            Assert.Equal(35129377, actual.Repository.Id);
            Assert.Equal("public-repo", actual.Repository.Name);
            Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
            Assert.Equal("baxterthehacker", actual.Repository.Owner.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Repository.Owner.Email);
            Assert.Equal(false, actual.Repository.Private);
            Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
            Assert.Equal("", actual.Repository.Description);
            Assert.Equal(false, actual.Repository.Fork);
            Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.Url);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
            Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
            //TODO:Assert.Equal(1430869212, actual.Repository.CreatedAt);
            Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
            //TODO:Assert.Equal(1430869217, actual.Repository.PushedAt);
            Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
            Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
            Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
            Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
            Assert.Equal(null, actual.Repository.Homepage);
            Assert.Equal(0, actual.Repository.Size);
            Assert.Equal(0, actual.Repository.StargazersCount);
            Assert.Equal(0, actual.Repository.WatchersCount);
            Assert.Equal(null, actual.Repository.Language);
            Assert.Equal(true, actual.Repository.HasIssues);
            Assert.Equal(true, actual.Repository.HasDownloads);
            Assert.Equal(true, actual.Repository.HasWiki);
            Assert.Equal(true, actual.Repository.HasPages);
            Assert.Equal(0, actual.Repository.ForksCount);
            Assert.Equal(null, actual.Repository.MirrorUrl);
            Assert.Equal(0, actual.Repository.OpenIssuesCount);
            Assert.Equal(0, actual.Repository.Forks);
            Assert.Equal(0, actual.Repository.OpenIssues);
            Assert.Equal(0, actual.Repository.Watchers);
            Assert.Equal("master", actual.Repository.DefaultBranch);
            //TODO:Assert.Equal(0, actual.Repository.Stargazers);
            //Assert.Equal("master", actual.Repository.MasterBranch);
            Assert.Equal("baxterthehacker", actual.Pusher.Name);
            Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Pusher.Email);
            Assert.Equal("baxterthehacker", actual.Sender.Login);
            Assert.Equal(6752317, actual.Sender.Id);
            Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
            Assert.Equal("", actual.Sender.GravatarId);
            Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
            Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
            Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
            Assert.Equal(AccountType.User, actual.Sender.Type);
            Assert.Equal(false, actual.Sender.SiteAdmin);
        }
    }
}
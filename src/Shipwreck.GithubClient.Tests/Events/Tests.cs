using System;
using Xunit;

namespace Shipwreck.GithubClient.Events
{
    //public sealed class InstallationEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<InstallationEventPayload>("InstallationEvent.json");
    //        Assert.Equal("deleted", actual.Action);
    //        Assert.Equal(2, actual.Installation.Id);
    //        Assert.Equal("octocat", actual.Installation.Account.Login);
    //        Assert.Equal(1, actual.Installation.Account.Id);
    //        Assert.Equal("https://github.com/images/error/octocat_happy.gif", actual.Installation.Account.AvatarUrl);
    //        Assert.Equal("", actual.Installation.Account.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.Installation.Account.Url);
    //        Assert.Equal("https://github.com/octocat", actual.Installation.Account.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.Installation.Account.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.Installation.Account.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.Installation.Account.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.Installation.Account.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.Installation.Account.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.Installation.Account.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.Installation.Account.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.Installation.Account.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.Installation.Account.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Installation.Account.Type);
    //        Assert.Equal(false, actual.Installation.Account.SiteAdmin);
    //        Assert.Equal("selected", actual.Installation.RepositorySelection);
    //        Assert.Equal("https://api.github.com/installations/2/access_tokens", actual.Installation.AccessTokensUrl);
    //        Assert.Equal("https://api.github.com/installation/repositories", actual.Installation.RepositoriesUrl);
    //        Assert.Equal("octocat", actual.Sender.Login);
    //        Assert.Equal(1, actual.Sender.Id);
    //        Assert.Equal("https://github.com/images/error/octocat_happy.gif", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.Sender.Url);
    //        Assert.Equal("https://github.com/octocat", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class InstallationRepositoriesEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<InstallationRepositoriesEventPayload>("InstallationRepositoriesEvent.json");
    //        Assert.Equal("removed", actual.Action);
    //        Assert.Equal(2, actual.Installation.Id);
    //        Assert.Equal("octocat", actual.Installation.Account.Login);
    //        Assert.Equal(1, actual.Installation.Account.Id);
    //        Assert.Equal("https://github.com/images/error/octocat_happy.gif", actual.Installation.Account.AvatarUrl);
    //        Assert.Equal("", actual.Installation.Account.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.Installation.Account.Url);
    //        Assert.Equal("https://github.com/octocat", actual.Installation.Account.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.Installation.Account.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.Installation.Account.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.Installation.Account.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.Installation.Account.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.Installation.Account.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.Installation.Account.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.Installation.Account.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.Installation.Account.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.Installation.Account.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Installation.Account.Type);
    //        Assert.Equal(false, actual.Installation.Account.SiteAdmin);
    //        Assert.Equal("selected", actual.Installation.RepositorySelection);
    //        Assert.Equal("https://api.github.com/installations/2/access_tokens", actual.Installation.AccessTokensUrl);
    //        Assert.Equal("https://api.github.com/installation/repositories", actual.Installation.RepositoriesUrl);
    //        Assert.Equal("https://github.com/settings/installations/2", actual.Installation.HtmlUrl);
    //        Assert.Equal("selected", actual.RepositorySelection);
    //        Assert.Equal(1296269, actual.RepositoriesRemoved[0].Id);
    //        Assert.Equal("Hello-World", actual.RepositoriesRemoved[0].Name);
    //        Assert.Equal("octocat/Hello-World", actual.RepositoriesRemoved[0].FullName);
    //        Assert.Equal("octocat", actual.Sender.Login);
    //        Assert.Equal(1, actual.Sender.Id);
    //        Assert.Equal("https://github.com/images/error/octocat_happy.gif", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.Sender.Url);
    //        Assert.Equal("https://github.com/octocat", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class IssueCommentEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<IssueCommentEventPayload>("IssueCommentEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2", actual.Issue.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/labels{/name}", actual.Issue.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/comments", actual.Issue.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/events", actual.Issue.EventsUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/issues/2", actual.Issue.HtmlUrl);
    //        Assert.Equal(73464126, actual.Issue.Id);
    //        Assert.Equal(2, actual.Issue.Number);
    //        Assert.Equal("Spelling error in the README file", actual.Issue.Title);
    //        Assert.Equal("baxterthehacker", actual.Issue.User.Login);
    //        Assert.Equal(6752317, actual.Issue.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Issue.User.AvatarUrl);
    //        Assert.Equal("", actual.Issue.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Issue.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Issue.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Issue.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Issue.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Issue.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Issue.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Issue.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Issue.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Issue.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Issue.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Issue.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Issue.User.Type);
    //        Assert.Equal(false, actual.Issue.User.SiteAdmin);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels/bug", actual.Issue.Labels[0].Url);
    //        Assert.Equal("bug", actual.Issue.Labels[0].Name);
    //        Assert.Equal("fc2929", actual.Issue.Labels[0].Color);
    //        Assert.Equal("open", actual.Issue.State);
    //        Assert.Equal(false, actual.Issue.Locked);
    //        Assert.Equal(null, actual.Issue.Assignee);
    //        Assert.Equal(null, actual.Issue.Milestone);
    //        Assert.Equal(1, actual.Issue.Comments);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Issue.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Issue.UpdatedAt);
    //        Assert.Equal(null, actual.Issue.ClosedAt);
    //        Assert.Equal("It looks like you accidently spelled 'commit' with two 't's.", actual.Issue.Body);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments/99262140", actual.Comment.Url);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/issues/2#issuecomment-99262140", actual.Comment.HtmlUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2", actual.Comment.IssueUrl);
    //        Assert.Equal(99262140, actual.Comment.Id);
    //        Assert.Equal("baxterthehacker", actual.Comment.User.Login);
    //        Assert.Equal(6752317, actual.Comment.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Comment.User.AvatarUrl);
    //        Assert.Equal("", actual.Comment.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Comment.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Comment.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Comment.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Comment.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Comment.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Comment.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Comment.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Comment.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Comment.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Comment.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Comment.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Comment.User.Type);
    //        Assert.Equal(false, actual.Comment.User.SiteAdmin);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Comment.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Comment.UpdatedAt);
    //        Assert.Equal("You are totally right! I'll get this fixed right away.", actual.Comment.Body);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class IssuesEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<IssuesEventPayload>("IssuesEvent.json");
    //        Assert.Equal("opened", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2", actual.Issue.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/labels{/name}", actual.Issue.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/comments", actual.Issue.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2/events", actual.Issue.EventsUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/issues/2", actual.Issue.HtmlUrl);
    //        Assert.Equal(73464126, actual.Issue.Id);
    //        Assert.Equal(2, actual.Issue.Number);
    //        Assert.Equal("Spelling error in the README file", actual.Issue.Title);
    //        Assert.Equal("baxterthehacker", actual.Issue.User.Login);
    //        Assert.Equal(6752317, actual.Issue.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Issue.User.AvatarUrl);
    //        Assert.Equal("", actual.Issue.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Issue.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Issue.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Issue.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Issue.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Issue.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Issue.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Issue.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Issue.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Issue.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Issue.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Issue.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Issue.User.Type);
    //        Assert.Equal(false, actual.Issue.User.SiteAdmin);
    //        Assert.Equal(208045946, actual.Issue.Labels[0].Id);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels/bug", actual.Issue.Labels[0].Url);
    //        Assert.Equal("bug", actual.Issue.Labels[0].Name);
    //        Assert.Equal("fc2929", actual.Issue.Labels[0].Color);
    //        Assert.Equal(true, actual.Issue.Labels[0].Default);
    //        Assert.Equal("open", actual.Issue.State);
    //        Assert.Equal(false, actual.Issue.Locked);
    //        Assert.Equal(null, actual.Issue.Assignee);
    //        Assert.Equal(null, actual.Issue.Milestone);
    //        Assert.Equal(0, actual.Issue.Comments);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Issue.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:28z"), actual.Issue.UpdatedAt);
    //        Assert.Equal(null, actual.Issue.ClosedAt);
    //        Assert.Equal("It looks like you accidently spelled 'commit' with two 't's.", actual.Issue.Body);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class LabelEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<LabelEventPayload>("LabelEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/labels/blocked", actual.Label.Url);
    //        Assert.Equal("blocked", actual.Label.Name);
    //        Assert.Equal("ff0000", actual.Label.Color);
    //        Assert.Equal(67075329, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterandthehackers/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterandthehackers", actual.Repository.Owner.Login);
    //        Assert.Equal(4312013, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal("Organization", actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(true, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal(null, actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/deployments", actual.Repository.DeploymentsUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/31 21:38:51z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/31 21:38:51z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/31 21:38:51z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterandthehackers/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterandthehackers/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(false, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(4312013, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(7649605, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(true, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class MarketplacePurchaseEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<MarketplacePurchaseEventPayload>("MarketplacePurchaseEvent.json");
    //        Assert.Equal("changed", actual.Action);
    //        Assert.Equal(DateTimeOffset.Parse("2017/04/06 2:01:16z"), actual.EffectiveDate);
    //        Assert.Equal("Organization", actual.MarketplacePurchase.Account.Type);
    //        Assert.Equal(4, actual.MarketplacePurchase.Account.Id);
    //        Assert.Equal("GitHub", actual.MarketplacePurchase.Account.Login);
    //        Assert.Equal("billing@github.com", actual.MarketplacePurchase.Account.OrganizationBillingEmail);
    //        Assert.Equal("monthly", actual.MarketplacePurchase.BillingCycle);
    //        Assert.Equal(DateTimeOffset.Parse("2017/05/01 0:00:00z"), actual.MarketplacePurchase.NextBillingDate);
    //        Assert.Equal(1, actual.MarketplacePurchase.UnitCount);
    //        Assert.Equal(9, actual.MarketplacePurchase.Plan.Id);
    //        Assert.Equal("Super Pro", actual.MarketplacePurchase.Plan.Name);
    //        Assert.Equal("A really, super professional-grade CI solution", actual.MarketplacePurchase.Plan.Description);
    //        Assert.Equal(9999, actual.MarketplacePurchase.Plan.MonthlyPriceInCents);
    //        Assert.Equal(11998, actual.MarketplacePurchase.Plan.YearlyPriceInCents);
    //        Assert.Equal("flat-rate", actual.MarketplacePurchase.Plan.PriceModel);
    //        Assert.Equal(null, actual.MarketplacePurchase.Plan.UnitName);
    //        Assert.Equal("Organization", actual.PreviousMarketplacePurchase.Account.Type);
    //        Assert.Equal(4, actual.PreviousMarketplacePurchase.Account.Id);
    //        Assert.Equal("GitHub", actual.PreviousMarketplacePurchase.Account.Login);
    //        Assert.Equal("monthly", actual.PreviousMarketplacePurchase.BillingCycle);
    //        Assert.Equal(DateTimeOffset.Parse("2017/05/01 0:00:00z"), actual.PreviousMarketplacePurchase.NextBillingDate);
    //        Assert.Equal(1, actual.PreviousMarketplacePurchase.UnitCount);
    //        Assert.Equal(9, actual.PreviousMarketplacePurchase.Plan.Id);
    //        Assert.Equal("Super Pro", actual.PreviousMarketplacePurchase.Plan.Name);
    //        Assert.Equal("A really, super professional-grade CI solution", actual.PreviousMarketplacePurchase.Plan.Description);
    //        Assert.Equal(9999, actual.PreviousMarketplacePurchase.Plan.MonthlyPriceInCents);
    //        Assert.Equal(11998, actual.PreviousMarketplacePurchase.Plan.YearlyPriceInCents);
    //        Assert.Equal("flat-rate", actual.PreviousMarketplacePurchase.Plan.PriceModel);
    //        Assert.Equal(null, actual.PreviousMarketplacePurchase.Plan.UnitName);
    //        Assert.Equal(1, actual.Sender.Id);
    //        Assert.Equal("octocat", actual.Sender.Login);
    //        Assert.Equal("octocat@github.com", actual.Sender.Email);
    //    }
    //}
    //public sealed class MemberEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<MemberEventPayload>("MemberEvent.json");
    //        Assert.Equal("added", actual.Action);
    //        Assert.Equal("octocat", actual.Member.Login);
    //        Assert.Equal(583231, actual.Member.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/583231?v=3", actual.Member.AvatarUrl);
    //        Assert.Equal("", actual.Member.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.Member.Url);
    //        Assert.Equal("https://github.com/octocat", actual.Member.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.Member.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.Member.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.Member.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.Member.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.Member.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.Member.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.Member.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.Member.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.Member.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Member.Type);
    //        Assert.Equal(false, actual.Member.SiteAdmin);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:40z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class MembershipEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<MembershipEventPayload>("MembershipEvent.json");
    //        Assert.Equal("added", actual.Action);
    //        Assert.Equal("team", actual.Scope);
    //        Assert.Equal("kdaigle", actual.Member.Login);
    //        Assert.Equal(2501, actual.Member.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/2501?v=3", actual.Member.AvatarUrl);
    //        Assert.Equal("", actual.Member.GravatarId);
    //        Assert.Equal("https://api.github.com/users/kdaigle", actual.Member.Url);
    //        Assert.Equal("https://github.com/kdaigle", actual.Member.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/followers", actual.Member.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/following{/other_user}", actual.Member.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/gists{/gist_id}", actual.Member.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/starred{/owner}{/repo}", actual.Member.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/subscriptions", actual.Member.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/orgs", actual.Member.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/repos", actual.Member.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/events{/privacy}", actual.Member.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/kdaigle/received_events", actual.Member.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Member.Type);
    //        Assert.Equal(true, actual.Member.SiteAdmin);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //        Assert.Equal("Contractors", actual.Team.Name);
    //        Assert.Equal(123456, actual.Team.Id);
    //        Assert.Equal("contractors", actual.Team.Slug);
    //        Assert.Equal("admin", actual.Team.Permission);
    //        Assert.Equal("https://api.github.com/teams/123456", actual.Team.Url);
    //        Assert.Equal("https://api.github.com/teams/123456/members{/member}", actual.Team.MembersUrl);
    //        Assert.Equal("https://api.github.com/teams/123456/repos", actual.Team.RepositoriesUrl);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //    }
    //}
    //public sealed class MilestoneEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<MilestoneEventPayload>("MilestoneEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones/3", actual.Milestone.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo/milestones/Test%20milestone%20creation%20webhook%20from%20command%20line2", actual.Milestone.HtmlUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones/3/labels", actual.Milestone.LabelsUrl);
    //        Assert.Equal(2055681, actual.Milestone.Id);
    //        Assert.Equal(3, actual.Milestone.Number);
    //        Assert.Equal("I am a milestone", actual.Milestone.Title);
    //        Assert.Equal(null, actual.Milestone.Description);
    //        Assert.Equal("baxterthehacker", actual.Milestone.Creator.Login);
    //        Assert.Equal(7649605, actual.Milestone.Creator.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Milestone.Creator.AvatarUrl);
    //        Assert.Equal("", actual.Milestone.Creator.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Milestone.Creator.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Milestone.Creator.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Milestone.Creator.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Milestone.Creator.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Milestone.Creator.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Milestone.Creator.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Milestone.Creator.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Milestone.Creator.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Milestone.Creator.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Milestone.Creator.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Milestone.Creator.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Milestone.Creator.Type);
    //        Assert.Equal(true, actual.Milestone.Creator.SiteAdmin);
    //        Assert.Equal(0, actual.Milestone.OpenIssues);
    //        Assert.Equal(0, actual.Milestone.ClosedIssues);
    //        Assert.Equal("open", actual.Milestone.State);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/07 19:26:08z"), actual.Milestone.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/07 19:26:08z"), actual.Milestone.UpdatedAt);
    //        Assert.Equal(null, actual.Milestone.DueOn);
    //        Assert.Equal(null, actual.Milestone.ClosedAt);
    //        Assert.Equal(70275481, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterandthehackers/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterandthehackers", actual.Repository.Owner.Login);
    //        Assert.Equal(4312013, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal("Organization", actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(true, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal(null, actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/deployments", actual.Repository.DeploymentsUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/07 19:10:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/07 19:10:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/07 19:10:13z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterandthehackers/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterandthehackers/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(false, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(4312013, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(7649605, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(true, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class OrganizationEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<OrganizationEventPayload>("OrganizationEvent.json");
    //        Assert.Equal("member_invited", actual.Action);
    //        Assert.Equal(3294302, actual.Invitation.Id);
    //        Assert.Equal("baxterthehacker", actual.Invitation.Login);
    //        Assert.Equal(null, actual.Invitation.Email);
    //        Assert.Equal("direct_member", actual.Invitation.Role);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/memberships/baxterthehacker", actual.Membership.Url);
    //        Assert.Equal("active", actual.Membership.State);
    //        Assert.Equal("member", actual.Membership.Role);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Membership.OrganizationUrl);
    //        Assert.Equal("baxterthehacker", actual.Membership.User.Login);
    //        Assert.Equal(7649605, actual.Membership.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/17085448?v=3", actual.Membership.User.AvatarUrl);
    //        Assert.Equal("", actual.Membership.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Membership.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Membership.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Membership.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Membership.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Membership.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Membership.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Membership.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Membership.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Membership.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Membership.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Membership.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Membership.User.Type);
    //        Assert.Equal(false, actual.Membership.User.SiteAdmin);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(4312013, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(7649605, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(true, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class OrgBlockEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<OrgBlockEventPayload>("OrgBlockEvent.json");
    //        Assert.Equal("blocked", actual.Action);
    //        Assert.Equal("octocat", actual.BlockedUser.Login);
    //        Assert.Equal(583231, actual.BlockedUser.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/583231?v=3", actual.BlockedUser.AvatarUrl);
    //        Assert.Equal("", actual.BlockedUser.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.BlockedUser.Url);
    //        Assert.Equal("https://github.com/octocat", actual.BlockedUser.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.BlockedUser.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.BlockedUser.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.BlockedUser.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.BlockedUser.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.BlockedUser.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.BlockedUser.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.BlockedUser.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.BlockedUser.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.BlockedUser.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.BlockedUser.Type);
    //        Assert.Equal(false, actual.BlockedUser.SiteAdmin);
    //        Assert.Equal("github", actual.Organization.Login);
    //        Assert.Equal(4366038, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/github", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/github/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4366038?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("octodocs", actual.Sender.Login);
    //        Assert.Equal(25781999, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/25781999?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octodocs", actual.Sender.Url);
    //        Assert.Equal("https://github.com/octodocs", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class PageBuildEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PageBuildEventPayload>("PageBuildEvent.json");
    //        Assert.Equal(15995382, actual.Id);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pages/builds/15995382", actual.Build.Url);
    //        Assert.Equal("built", actual.Build.Status);
    //        Assert.Equal(null, actual.Build.Error.Message);
    //        Assert.Equal("baxterthehacker", actual.Build.Pusher.Login);
    //        Assert.Equal(6752317, actual.Build.Pusher.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Build.Pusher.AvatarUrl);
    //        Assert.Equal("", actual.Build.Pusher.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Build.Pusher.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Build.Pusher.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Build.Pusher.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Build.Pusher.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Build.Pusher.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Build.Pusher.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Build.Pusher.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Build.Pusher.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Build.Pusher.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Build.Pusher.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Build.Pusher.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Build.Pusher.Type);
    //        Assert.Equal(false, actual.Build.Pusher.SiteAdmin);
    //        Assert.Equal("053b99542c83021d6b202d1a1f5ecd5ef7084e55", actual.Build.Commit);
    //        Assert.Equal(3790, actual.Build.Duration);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:13z"), actual.Build.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:17z"), actual.Build.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:17z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class ProjectCardEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectCardEventPayload>("ProjectCardEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/projects/columns/cards/1266091", actual.ProjectCard.Url);
    //        Assert.Equal("https://api.github.com/projects/columns/515520", actual.ProjectCard.ColumnUrl);
    //        Assert.Equal(515520, actual.ProjectCard.ColumnId);
    //        Assert.Equal(1266091, actual.ProjectCard.Id);
    //        Assert.Equal(null, actual.ProjectCard.Note);
    //        Assert.Equal("baxterthehacker", actual.ProjectCard.Creator.Login);
    //        Assert.Equal(6752317, actual.ProjectCard.Creator.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.ProjectCard.Creator.AvatarUrl);
    //        Assert.Equal("", actual.ProjectCard.Creator.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.ProjectCard.Creator.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.ProjectCard.Creator.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.ProjectCard.Creator.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.ProjectCard.Creator.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.ProjectCard.Creator.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.ProjectCard.Creator.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.ProjectCard.Creator.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.ProjectCard.Creator.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.ProjectCard.Creator.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.ProjectCard.Creator.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.ProjectCard.Creator.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.ProjectCard.Creator.Type);
    //        Assert.Equal(false, actual.ProjectCard.Creator.SiteAdmin);
    //        Assert.Equal(1483569391, actual.ProjectCard.CreatedAt);
    //        Assert.Equal(1483569391, actual.ProjectCard.UpdatedAt);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2", actual.ProjectCard.ContentUrl);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class ProjectColumnEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectColumnEventPayload>("ProjectColumnEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/projects/columns/515520", actual.ProjectColumn.Url);
    //        Assert.Equal("https://api.github.com/projects/288065", actual.ProjectColumn.ProjectUrl);
    //        Assert.Equal("https://api.github.com/projects/columns/515520/cards", actual.ProjectColumn.CardsUrl);
    //        Assert.Equal(515520, actual.ProjectColumn.Id);
    //        Assert.Equal("High Priority", actual.ProjectColumn.Name);
    //        Assert.Equal(1483569138, actual.ProjectColumn.CreatedAt);
    //        Assert.Equal(1483569138, actual.ProjectColumn.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class ProjectEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectEventPayload>("ProjectEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Project.OwnerUrl);
    //        Assert.Equal("https://api.github.com/projects/288065", actual.Project.Url);
    //        Assert.Equal("https://api.github.com/projects/288065/columns", actual.Project.ColumnsUrl);
    //        Assert.Equal(288065, actual.Project.Id);
    //        Assert.Equal("2017", actual.Project.Name);
    //        Assert.Equal("Roadmap for work to be done in 2017", actual.Project.Body);
    //        Assert.Equal(10, actual.Project.Number);
    //        Assert.Equal("open", actual.Project.State);
    //        Assert.Equal("baxterthehacker", actual.Project.Creator.Login);
    //        Assert.Equal(6752317, actual.Project.Creator.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Project.Creator.AvatarUrl);
    //        Assert.Equal("", actual.Project.Creator.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Project.Creator.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Project.Creator.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Project.Creator.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Project.Creator.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Project.Creator.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Project.Creator.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Project.Creator.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Project.Creator.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Project.Creator.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Project.Creator.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Project.Creator.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Project.Creator.Type);
    //        Assert.Equal(false, actual.Project.Creator.SiteAdmin);
    //        Assert.Equal(1483567089, actual.Project.CreatedAt);
    //        Assert.Equal(1483567089, actual.Project.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class PublicEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PublicEventPayload>("PublicEvent.json");
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:41z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:40z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class PullRequestEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PullRequestEventPayload>("PullRequestEvent.json");
    //        Assert.Equal("opened", actual.Action);
    //        Assert.Equal(1, actual.Number);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.PullRequest.Url);
    //        Assert.Equal(34778301, actual.PullRequest.Id);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1", actual.PullRequest.HtmlUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1.diff", actual.PullRequest.DiffUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1.patch", actual.PullRequest.PatchUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1", actual.PullRequest.IssueUrl);
    //        Assert.Equal(1, actual.PullRequest.Number);
    //        Assert.Equal("open", actual.PullRequest.State);
    //        Assert.Equal(false, actual.PullRequest.Locked);
    //        Assert.Equal("Update the README with new information", actual.PullRequest.Title);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.User.Type);
    //        Assert.Equal(false, actual.PullRequest.User.SiteAdmin);
    //        Assert.Equal("This is a pretty simple change that we need to pull into master.", actual.PullRequest.Body);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.UpdatedAt);
    //        Assert.Equal(null, actual.PullRequest.ClosedAt);
    //        Assert.Equal(null, actual.PullRequest.MergedAt);
    //        Assert.Equal(null, actual.PullRequest.MergeCommitSha);
    //        Assert.Equal(null, actual.PullRequest.Assignee);
    //        Assert.Equal(null, actual.PullRequest.Milestone);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits", actual.PullRequest.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments", actual.PullRequest.ReviewCommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.ReviewCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments", actual.PullRequest.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.StatusesUrl);
    //        Assert.Equal("baxterthehacker:changes", actual.PullRequest.Head.Label);
    //        Assert.Equal("changes", actual.PullRequest.Head.Ref);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.Head.Sha);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Head.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Head.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Head.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Head.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Head.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Head.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Head.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Head.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Head.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Head.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Head.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Head.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Head.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Head.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.User.Type);
    //        Assert.Equal(false, actual.PullRequest.Head.User.SiteAdmin);
    //        Assert.Equal(35129377, actual.PullRequest.Head.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Head.Repo.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.PullRequest.Head.Repo.FullName);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Head.Repo.Owner.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Head.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Head.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Head.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Head.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Head.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Head.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Head.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Head.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Head.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Head.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Head.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Head.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Head.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.Repo.Owner.Type);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.HtmlUrl);
    //        Assert.Equal("", actual.PullRequest.Head.Repo.Description);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.PullRequest.Head.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.PullRequest.Head.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.PullRequest.Head.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.PullRequest.Head.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.PullRequest.Head.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.PullRequest.Head.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.PullRequest.Head.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.PullRequest.Head.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.PullRequest.Head.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.PullRequest.Head.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.PullRequest.Head.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.PullRequest.Head.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.PullRequest.Head.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.PullRequest.Head.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.PullRequest.Head.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.PullRequest.Head.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.PullRequest.Head.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.PullRequest.Head.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.PullRequest.Head.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.PullRequest.Head.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.PullRequest.Head.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.PullRequest.Head.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.PullRequest.Head.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.PullRequest.Head.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.PullRequest.Head.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.PullRequest.Head.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.PullRequest.Head.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.PullRequest.Head.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.PullRequest.Head.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.PullRequest.Head.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.PullRequest.Head.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.PullRequest.Head.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.PullRequest.Head.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.PullRequest.Head.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.PullRequest.Head.Repo.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Head.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Head.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:26z"), actual.PullRequest.Head.Repo.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Homepage);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Size);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.StargazersCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Language);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasWiki);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasPages);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.MirrorUrl);
    //        Assert.Equal(1, actual.PullRequest.Head.Repo.OpenIssuesCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Forks);
    //        Assert.Equal(1, actual.PullRequest.Head.Repo.OpenIssues);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Head.Repo.DefaultBranch);
    //        Assert.Equal("baxterthehacker:master", actual.PullRequest.Base.Label);
    //        Assert.Equal("master", actual.PullRequest.Base.Ref);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.PullRequest.Base.Sha);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.User.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.User.SiteAdmin);
    //        Assert.Equal(35129377, actual.PullRequest.Base.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Base.Repo.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.PullRequest.Base.Repo.FullName);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.Repo.Owner.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.Repo.Owner.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.HtmlUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Description);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.PullRequest.Base.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.PullRequest.Base.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.PullRequest.Base.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.PullRequest.Base.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.PullRequest.Base.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.PullRequest.Base.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.PullRequest.Base.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.PullRequest.Base.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.PullRequest.Base.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.PullRequest.Base.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.PullRequest.Base.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.PullRequest.Base.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.PullRequest.Base.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.PullRequest.Base.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.PullRequest.Base.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.PullRequest.Base.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.PullRequest.Base.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.PullRequest.Base.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.PullRequest.Base.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.PullRequest.Base.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.PullRequest.Base.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.PullRequest.Base.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.PullRequest.Base.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.PullRequest.Base.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.PullRequest.Base.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.PullRequest.Base.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.PullRequest.Base.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.PullRequest.Base.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.PullRequest.Base.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.PullRequest.Base.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.PullRequest.Base.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.PullRequest.Base.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.PullRequest.Base.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.PullRequest.Base.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.PullRequest.Base.Repo.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Base.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Base.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:26z"), actual.PullRequest.Base.Repo.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Homepage);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Size);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.StargazersCount);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Language);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasWiki);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasPages);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.MirrorUrl);
    //        Assert.Equal(1, actual.PullRequest.Base.Repo.OpenIssuesCount);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Forks);
    //        Assert.Equal(1, actual.PullRequest.Base.Repo.OpenIssues);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Base.Repo.DefaultBranch);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.PullRequest.Links.Self.Href);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1", actual.PullRequest.Links.Html.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1", actual.PullRequest.Links.Issue.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments", actual.PullRequest.Links.Comments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments", actual.PullRequest.Links.ReviewComments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.Links.ReviewComment.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits", actual.PullRequest.Links.Commits.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.Links.Statuses.Href);
    //        Assert.Equal(false, actual.PullRequest.Merged);
    //        Assert.Equal(null, actual.PullRequest.Mergeable);
    //        Assert.Equal("unknown", actual.PullRequest.MergeableState);
    //        Assert.Equal(null, actual.PullRequest.MergedBy);
    //        Assert.Equal(0, actual.PullRequest.Comments);
    //        Assert.Equal(0, actual.PullRequest.ReviewComments);
    //        Assert.Equal(1, actual.PullRequest.Commits);
    //        Assert.Equal(1, actual.PullRequest.Additions);
    //        Assert.Equal(1, actual.PullRequest.Deletions);
    //        Assert.Equal(1, actual.PullRequest.ChangedFiles);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:26z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(1, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(1, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //        Assert.Equal(234, actual.Installation.Id);
    //    }
    //}
    //public sealed class PullRequestReviewCommentEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PullRequestReviewCommentEventPayload>("PullRequestReviewCommentEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments/29724692", actual.Comment.Url);
    //        Assert.Equal(29724692, actual.Comment.Id);
    //        Assert.Equal("@@ -1 +1 @@\n-# public-repo", actual.Comment.DiffHunk);
    //        Assert.Equal("README.md", actual.Comment.Path);
    //        Assert.Equal(1, actual.Comment.Position);
    //        Assert.Equal(1, actual.Comment.OriginalPosition);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Comment.CommitId);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Comment.OriginalCommitId);
    //        Assert.Equal("baxterthehacker", actual.Comment.User.Login);
    //        Assert.Equal(6752317, actual.Comment.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Comment.User.AvatarUrl);
    //        Assert.Equal("", actual.Comment.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Comment.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Comment.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Comment.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Comment.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Comment.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Comment.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Comment.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Comment.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Comment.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Comment.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Comment.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Comment.User.Type);
    //        Assert.Equal(false, actual.Comment.User.SiteAdmin);
    //        Assert.Equal("Maybe you should use more emojji on this line.", actual.Comment.Body);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Comment.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Comment.UpdatedAt);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1#discussion_r29724692", actual.Comment.HtmlUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.Comment.PullRequestUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments/29724692", actual.Comment.Links.Self.Href);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1#discussion_r29724692", actual.Comment.Links.Html.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.Comment.Links.PullRequest.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.PullRequest.Url);
    //        Assert.Equal(34778301, actual.PullRequest.Id);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1", actual.PullRequest.HtmlUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1.diff", actual.PullRequest.DiffUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1.patch", actual.PullRequest.PatchUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1", actual.PullRequest.IssueUrl);
    //        Assert.Equal(1, actual.PullRequest.Number);
    //        Assert.Equal("open", actual.PullRequest.State);
    //        Assert.Equal(false, actual.PullRequest.Locked);
    //        Assert.Equal("Update the README with new information", actual.PullRequest.Title);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.User.Type);
    //        Assert.Equal(false, actual.PullRequest.User.SiteAdmin);
    //        Assert.Equal("This is a pretty simple change that we need to pull into master.", actual.PullRequest.Body);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.UpdatedAt);
    //        Assert.Equal(null, actual.PullRequest.ClosedAt);
    //        Assert.Equal(null, actual.PullRequest.MergedAt);
    //        Assert.Equal("18721552ba489fb84e12958c1b5694b5475f7991", actual.PullRequest.MergeCommitSha);
    //        Assert.Equal(null, actual.PullRequest.Assignee);
    //        Assert.Equal(null, actual.PullRequest.Milestone);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits", actual.PullRequest.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments", actual.PullRequest.ReviewCommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.ReviewCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments", actual.PullRequest.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.StatusesUrl);
    //        Assert.Equal("baxterthehacker:changes", actual.PullRequest.Head.Label);
    //        Assert.Equal("changes", actual.PullRequest.Head.Ref);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.Head.Sha);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Head.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Head.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Head.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Head.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Head.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Head.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Head.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Head.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Head.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Head.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Head.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Head.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Head.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Head.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.User.Type);
    //        Assert.Equal(false, actual.PullRequest.Head.User.SiteAdmin);
    //        Assert.Equal(35129377, actual.PullRequest.Head.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Head.Repo.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.PullRequest.Head.Repo.FullName);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Head.Repo.Owner.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Head.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Head.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Head.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Head.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Head.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Head.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Head.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Head.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Head.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Head.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Head.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Head.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Head.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.Repo.Owner.Type);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.HtmlUrl);
    //        Assert.Equal("", actual.PullRequest.Head.Repo.Description);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.PullRequest.Head.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.PullRequest.Head.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.PullRequest.Head.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.PullRequest.Head.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.PullRequest.Head.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.PullRequest.Head.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.PullRequest.Head.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.PullRequest.Head.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.PullRequest.Head.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.PullRequest.Head.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.PullRequest.Head.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.PullRequest.Head.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.PullRequest.Head.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.PullRequest.Head.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.PullRequest.Head.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.PullRequest.Head.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.PullRequest.Head.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.PullRequest.Head.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.PullRequest.Head.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.PullRequest.Head.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.PullRequest.Head.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.PullRequest.Head.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.PullRequest.Head.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.PullRequest.Head.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.PullRequest.Head.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.PullRequest.Head.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.PullRequest.Head.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.PullRequest.Head.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.PullRequest.Head.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.PullRequest.Head.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.PullRequest.Head.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.PullRequest.Head.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.PullRequest.Head.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.PullRequest.Head.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.PullRequest.Head.Repo.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Head.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Head.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.Head.Repo.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Head.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Head.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Homepage);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Size);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.StargazersCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Language);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasWiki);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasPages);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.MirrorUrl);
    //        Assert.Equal(1, actual.PullRequest.Head.Repo.OpenIssuesCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Forks);
    //        Assert.Equal(1, actual.PullRequest.Head.Repo.OpenIssues);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Head.Repo.DefaultBranch);
    //        Assert.Equal("baxterthehacker:master", actual.PullRequest.Base.Label);
    //        Assert.Equal("master", actual.PullRequest.Base.Ref);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.PullRequest.Base.Sha);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.User.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.User.SiteAdmin);
    //        Assert.Equal(35129377, actual.PullRequest.Base.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Base.Repo.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.PullRequest.Base.Repo.FullName);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.Repo.Owner.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.Repo.Owner.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.HtmlUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Description);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.PullRequest.Base.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.PullRequest.Base.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.PullRequest.Base.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.PullRequest.Base.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.PullRequest.Base.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.PullRequest.Base.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.PullRequest.Base.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.PullRequest.Base.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.PullRequest.Base.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.PullRequest.Base.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.PullRequest.Base.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.PullRequest.Base.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.PullRequest.Base.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.PullRequest.Base.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.PullRequest.Base.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.PullRequest.Base.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.PullRequest.Base.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.PullRequest.Base.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.PullRequest.Base.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.PullRequest.Base.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.PullRequest.Base.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.PullRequest.Base.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.PullRequest.Base.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.PullRequest.Base.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.PullRequest.Base.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.PullRequest.Base.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.PullRequest.Base.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.PullRequest.Base.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.PullRequest.Base.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.PullRequest.Base.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.PullRequest.Base.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.PullRequest.Base.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.PullRequest.Base.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.PullRequest.Base.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.PullRequest.Base.Repo.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Base.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Base.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.PullRequest.Base.Repo.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Homepage);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Size);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.StargazersCount);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Language);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasWiki);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasPages);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.MirrorUrl);
    //        Assert.Equal(1, actual.PullRequest.Base.Repo.OpenIssuesCount);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Forks);
    //        Assert.Equal(1, actual.PullRequest.Base.Repo.OpenIssues);
    //        Assert.Equal(0, actual.PullRequest.Base.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Base.Repo.DefaultBranch);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1", actual.PullRequest.Links.Self.Href);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/1", actual.PullRequest.Links.Html.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1", actual.PullRequest.Links.Issue.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments", actual.PullRequest.Links.Comments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments", actual.PullRequest.Links.ReviewComments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.Links.ReviewComment.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits", actual.PullRequest.Links.Commits.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.PullRequest.Links.Statuses.Href);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(1, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(1, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class PullRequestReviewEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PullRequestReviewEventPayload>("PullRequestReviewEvent.json");
    //        Assert.Equal("submitted", actual.Action);
    //        Assert.Equal(2626884, actual.Review.Id);
    //        Assert.Equal("baxterthehacker", actual.Review.User.Login);
    //        Assert.Equal(6752317, actual.Review.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Review.User.AvatarUrl);
    //        Assert.Equal("", actual.Review.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Review.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Review.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Review.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Review.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Review.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Review.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Review.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Review.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Review.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Review.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Review.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Review.User.Type);
    //        Assert.Equal(false, actual.Review.User.SiteAdmin);
    //        Assert.Equal("Looks great!", actual.Review.Body);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:39:09z"), actual.Review.SubmittedAt);
    //        Assert.Equal("approved", actual.Review.State);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8#pullrequestreview-2626884", actual.Review.HtmlUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8", actual.Review.PullRequestUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8#pullrequestreview-2626884", actual.Review.Links.Html.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8", actual.Review.Links.PullRequest.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8", actual.PullRequest.Url);
    //        Assert.Equal(87811438, actual.PullRequest.Id);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8", actual.PullRequest.HtmlUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8.diff", actual.PullRequest.DiffUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8.patch", actual.PullRequest.PatchUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/8", actual.PullRequest.IssueUrl);
    //        Assert.Equal(8, actual.PullRequest.Number);
    //        Assert.Equal("open", actual.PullRequest.State);
    //        Assert.Equal(false, actual.PullRequest.Locked);
    //        Assert.Equal("Add a README description", actual.PullRequest.Title);
    //        Assert.Equal("skalnik", actual.PullRequest.User.Login);
    //        Assert.Equal(2546, actual.PullRequest.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/2546?v=3", actual.PullRequest.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/skalnik", actual.PullRequest.User.Url);
    //        Assert.Equal("https://github.com/skalnik", actual.PullRequest.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/followers", actual.PullRequest.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/following{/other_user}", actual.PullRequest.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/gists{/gist_id}", actual.PullRequest.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/starred{/owner}{/repo}", actual.PullRequest.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/subscriptions", actual.PullRequest.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/orgs", actual.PullRequest.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/repos", actual.PullRequest.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/events{/privacy}", actual.PullRequest.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/received_events", actual.PullRequest.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.User.Type);
    //        Assert.Equal(true, actual.PullRequest.User.SiteAdmin);
    //        Assert.Equal("Just a few more details", actual.PullRequest.Body);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:37:43z"), actual.PullRequest.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:39:09z"), actual.PullRequest.UpdatedAt);
    //        Assert.Equal(null, actual.PullRequest.ClosedAt);
    //        Assert.Equal(null, actual.PullRequest.MergedAt);
    //        Assert.Equal("faea154a7decef6819754aab0f8c0e232e6c8b4f", actual.PullRequest.MergeCommitSha);
    //        Assert.Equal(null, actual.PullRequest.Assignee);
    //        Assert.Equal(null, actual.PullRequest.Milestone);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8/commits", actual.PullRequest.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8/comments", actual.PullRequest.ReviewCommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.ReviewCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/8/comments", actual.PullRequest.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/b7a1f9c27caa4e03c14a88feb56e2d4f7500aa63", actual.PullRequest.StatusesUrl);
    //        Assert.Equal("skalnik:patch-2", actual.PullRequest.Head.Label);
    //        Assert.Equal("patch-2", actual.PullRequest.Head.Ref);
    //        Assert.Equal("b7a1f9c27caa4e03c14a88feb56e2d4f7500aa63", actual.PullRequest.Head.Sha);
    //        Assert.Equal("skalnik", actual.PullRequest.Head.User.Login);
    //        Assert.Equal(2546, actual.PullRequest.Head.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/2546?v=3", actual.PullRequest.Head.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/skalnik", actual.PullRequest.Head.User.Url);
    //        Assert.Equal("https://github.com/skalnik", actual.PullRequest.Head.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/followers", actual.PullRequest.Head.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/following{/other_user}", actual.PullRequest.Head.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/gists{/gist_id}", actual.PullRequest.Head.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/starred{/owner}{/repo}", actual.PullRequest.Head.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/subscriptions", actual.PullRequest.Head.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/orgs", actual.PullRequest.Head.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/repos", actual.PullRequest.Head.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/events{/privacy}", actual.PullRequest.Head.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/received_events", actual.PullRequest.Head.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.User.Type);
    //        Assert.Equal(true, actual.PullRequest.Head.User.SiteAdmin);
    //        Assert.Equal(69919152, actual.PullRequest.Head.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Head.Repo.Name);
    //        Assert.Equal("skalnik/public-repo", actual.PullRequest.Head.Repo.FullName);
    //        Assert.Equal("skalnik", actual.PullRequest.Head.Repo.Owner.Login);
    //        Assert.Equal(2546, actual.PullRequest.Head.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/2546?v=3", actual.PullRequest.Head.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Head.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/skalnik", actual.PullRequest.Head.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/skalnik", actual.PullRequest.Head.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/followers", actual.PullRequest.Head.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/following{/other_user}", actual.PullRequest.Head.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/gists{/gist_id}", actual.PullRequest.Head.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/starred{/owner}{/repo}", actual.PullRequest.Head.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/subscriptions", actual.PullRequest.Head.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/orgs", actual.PullRequest.Head.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/repos", actual.PullRequest.Head.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/events{/privacy}", actual.PullRequest.Head.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/skalnik/received_events", actual.PullRequest.Head.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Head.Repo.Owner.Type);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.Private);
    //        Assert.Equal("https://github.com/skalnik/public-repo", actual.PullRequest.Head.Repo.HtmlUrl);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Description);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo", actual.PullRequest.Head.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/forks", actual.PullRequest.Head.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/keys{/key_id}", actual.PullRequest.Head.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/collaborators{/collaborator}", actual.PullRequest.Head.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/teams", actual.PullRequest.Head.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/hooks", actual.PullRequest.Head.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/issues/events{/number}", actual.PullRequest.Head.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/events", actual.PullRequest.Head.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/assignees{/user}", actual.PullRequest.Head.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/branches{/branch}", actual.PullRequest.Head.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/tags", actual.PullRequest.Head.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/git/blobs{/sha}", actual.PullRequest.Head.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/git/tags{/sha}", actual.PullRequest.Head.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/git/refs{/sha}", actual.PullRequest.Head.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/git/trees{/sha}", actual.PullRequest.Head.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/statuses/{sha}", actual.PullRequest.Head.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/languages", actual.PullRequest.Head.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/stargazers", actual.PullRequest.Head.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/contributors", actual.PullRequest.Head.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/subscribers", actual.PullRequest.Head.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/subscription", actual.PullRequest.Head.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/commits{/sha}", actual.PullRequest.Head.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/git/commits{/sha}", actual.PullRequest.Head.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/comments{/number}", actual.PullRequest.Head.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/issues/comments{/number}", actual.PullRequest.Head.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/contents/{+path}", actual.PullRequest.Head.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/compare/{base}...{head}", actual.PullRequest.Head.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/merges", actual.PullRequest.Head.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/{archive_format}{/ref}", actual.PullRequest.Head.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/downloads", actual.PullRequest.Head.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/issues{/number}", actual.PullRequest.Head.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/pulls{/number}", actual.PullRequest.Head.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/milestones{/number}", actual.PullRequest.Head.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/notifications{?since,all,participating}", actual.PullRequest.Head.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/labels{/name}", actual.PullRequest.Head.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/releases{/id}", actual.PullRequest.Head.Repo.ReleasesUrl);
    //        Assert.Equal("https://api.github.com/repos/skalnik/public-repo/deployments", actual.PullRequest.Head.Repo.DeploymentsUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:23:31z"), actual.PullRequest.Head.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/15 17:19:01z"), actual.PullRequest.Head.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:36:52z"), actual.PullRequest.Head.Repo.PushedAt);
    //        Assert.Equal("git://github.com/skalnik/public-repo.git", actual.PullRequest.Head.Repo.GitUrl);
    //        Assert.Equal("git@github.com:skalnik/public-repo.git", actual.PullRequest.Head.Repo.SshUrl);
    //        Assert.Equal("https://github.com/skalnik/public-repo.git", actual.PullRequest.Head.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/skalnik/public-repo", actual.PullRequest.Head.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Homepage);
    //        Assert.Equal(233, actual.PullRequest.Head.Repo.Size);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.StargazersCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.Language);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Head.Repo.HasWiki);
    //        Assert.Equal(false, actual.PullRequest.Head.Repo.HasPages);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Head.Repo.MirrorUrl);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.OpenIssuesCount);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Forks);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.OpenIssues);
    //        Assert.Equal(0, actual.PullRequest.Head.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Head.Repo.DefaultBranch);
    //        Assert.Equal("baxterthehacker:master", actual.PullRequest.Base.Label);
    //        Assert.Equal("master", actual.PullRequest.Base.Ref);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.PullRequest.Base.Sha);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.User.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.User.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.User.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.User.SiteAdmin);
    //        Assert.Equal(35129377, actual.PullRequest.Base.Repo.Id);
    //        Assert.Equal("public-repo", actual.PullRequest.Base.Repo.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.PullRequest.Base.Repo.FullName);
    //        Assert.Equal("baxterthehacker", actual.PullRequest.Base.Repo.Owner.Login);
    //        Assert.Equal(6752317, actual.PullRequest.Base.Repo.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.PullRequest.Base.Repo.Owner.AvatarUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.PullRequest.Base.Repo.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.PullRequest.Base.Repo.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.PullRequest.Base.Repo.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.PullRequest.Base.Repo.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.PullRequest.Base.Repo.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.PullRequest.Base.Repo.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.PullRequest.Base.Repo.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.PullRequest.Base.Repo.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.PullRequest.Base.Repo.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.PullRequest.Base.Repo.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.PullRequest.Base.Repo.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.PullRequest.Base.Repo.Owner.Type);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.HtmlUrl);
    //        Assert.Equal("", actual.PullRequest.Base.Repo.Description);
    //        Assert.Equal(false, actual.PullRequest.Base.Repo.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.PullRequest.Base.Repo.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.PullRequest.Base.Repo.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.PullRequest.Base.Repo.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.PullRequest.Base.Repo.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.PullRequest.Base.Repo.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.PullRequest.Base.Repo.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.PullRequest.Base.Repo.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.PullRequest.Base.Repo.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.PullRequest.Base.Repo.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.PullRequest.Base.Repo.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.PullRequest.Base.Repo.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.PullRequest.Base.Repo.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.PullRequest.Base.Repo.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.PullRequest.Base.Repo.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.PullRequest.Base.Repo.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.PullRequest.Base.Repo.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.PullRequest.Base.Repo.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.PullRequest.Base.Repo.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.PullRequest.Base.Repo.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.PullRequest.Base.Repo.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.PullRequest.Base.Repo.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.PullRequest.Base.Repo.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.PullRequest.Base.Repo.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.PullRequest.Base.Repo.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.PullRequest.Base.Repo.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.PullRequest.Base.Repo.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.PullRequest.Base.Repo.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.PullRequest.Base.Repo.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.PullRequest.Base.Repo.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.PullRequest.Base.Repo.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.PullRequest.Base.Repo.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.PullRequest.Base.Repo.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.PullRequest.Base.Repo.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.PullRequest.Base.Repo.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.PullRequest.Base.Repo.ReleasesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/deployments", actual.PullRequest.Base.Repo.DeploymentsUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.PullRequest.Base.Repo.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/15 17:19:01z"), actual.PullRequest.Base.Repo.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:37:43z"), actual.PullRequest.Base.Repo.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.PullRequest.Base.Repo.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.PullRequest.Base.Repo.SvnUrl);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Homepage);
    //        Assert.Equal(233, actual.PullRequest.Base.Repo.Size);
    //        Assert.Equal(2, actual.PullRequest.Base.Repo.StargazersCount);
    //        Assert.Equal(2, actual.PullRequest.Base.Repo.WatchersCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.Language);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasIssues);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasDownloads);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasWiki);
    //        Assert.Equal(true, actual.PullRequest.Base.Repo.HasPages);
    //        Assert.Equal(2, actual.PullRequest.Base.Repo.ForksCount);
    //        Assert.Equal(null, actual.PullRequest.Base.Repo.MirrorUrl);
    //        Assert.Equal(5, actual.PullRequest.Base.Repo.OpenIssuesCount);
    //        Assert.Equal(2, actual.PullRequest.Base.Repo.Forks);
    //        Assert.Equal(5, actual.PullRequest.Base.Repo.OpenIssues);
    //        Assert.Equal(2, actual.PullRequest.Base.Repo.Watchers);
    //        Assert.Equal("master", actual.PullRequest.Base.Repo.DefaultBranch);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8", actual.PullRequest.Links.Self.Href);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/pull/8", actual.PullRequest.Links.Html.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/8", actual.PullRequest.Links.Issue.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/8/comments", actual.PullRequest.Links.Comments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8/comments", actual.PullRequest.Links.ReviewComments.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}", actual.PullRequest.Links.ReviewComment.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls/8/commits", actual.PullRequest.Links.Commits.Href);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/b7a1f9c27caa4e03c14a88feb56e2d4f7500aa63", actual.PullRequest.Links.Statuses.Href);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/deployments", actual.Repository.DeploymentsUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/08/15 17:19:01z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2016/10/03 23:37:43z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(233, actual.Repository.Size);
    //        Assert.Equal(2, actual.Repository.StargazersCount);
    //        Assert.Equal(2, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(2, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(5, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(2, actual.Repository.Forks);
    //        Assert.Equal(5, actual.Repository.OpenIssues);
    //        Assert.Equal(2, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class PushEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PushEventPayload>("PushEvent.json");
    //        Assert.Equal("refs/heads/changes", actual.Ref);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Before);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.After);
    //        Assert.Equal(false, actual.Created);
    //        Assert.Equal(false, actual.Deleted);
    //        Assert.Equal(false, actual.Forced);
    //        Assert.Equal(null, actual.BaseRef);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/compare/9049f1265b7d...0d1a26e67d8f", actual.Compare);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Commits[0].Id);
    //        Assert.Equal("f9d2a07e9488b91af2641b26b9407fe22a451433", actual.Commits[0].TreeId);
    //        Assert.Equal(true, actual.Commits[0].Distinct);
    //        Assert.Equal("Update README.md", actual.Commits[0].Message);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/06 8:40:15z"), actual.Commits[0].Timestamp);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Commits[0].Url);
    //        Assert.Equal("baxterthehacker", actual.Commits[0].Author.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commits[0].Author.Email);
    //        Assert.Equal("baxterthehacker", actual.Commits[0].Author.Username);
    //        Assert.Equal("baxterthehacker", actual.Commits[0].Committer.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commits[0].Committer.Email);
    //        Assert.Equal("baxterthehacker", actual.Commits[0].Committer.Username);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.HeadCommit.Id);
    //        Assert.Equal("f9d2a07e9488b91af2641b26b9407fe22a451433", actual.HeadCommit.TreeId);
    //        Assert.Equal(true, actual.HeadCommit.Distinct);
    //        Assert.Equal("Update README.md", actual.HeadCommit.Message);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/06 8:40:15z"), actual.HeadCommit.Timestamp);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.HeadCommit.Url);
    //        Assert.Equal("baxterthehacker", actual.HeadCommit.Author.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.HeadCommit.Author.Email);
    //        Assert.Equal("baxterthehacker", actual.HeadCommit.Author.Username);
    //        Assert.Equal("baxterthehacker", actual.HeadCommit.Committer.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.HeadCommit.Committer.Email);
    //        Assert.Equal("baxterthehacker", actual.HeadCommit.Committer.Username);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Repository.Owner.Email);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(1430869212, actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(1430869217, actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal(0, actual.Repository.Stargazers);
    //        Assert.Equal("master", actual.Repository.MasterBranch);
    //        Assert.Equal("baxterthehacker", actual.Pusher.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Pusher.Email);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class ReleaseEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ReleaseEventPayload>("ReleaseEvent.json");
    //        Assert.Equal("published", actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases/1261438", actual.Release.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases/1261438/assets", actual.Release.AssetsUrl);
    //        Assert.Equal("https://uploads.github.com/repos/baxterthehacker/public-repo/releases/1261438/assets{?name}", actual.Release.UploadUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/releases/tag/0.0.1", actual.Release.HtmlUrl);
    //        Assert.Equal(1261438, actual.Release.Id);
    //        Assert.Equal("0.0.1", actual.Release.TagName);
    //        Assert.Equal("master", actual.Release.TargetCommitish);
    //        Assert.Equal(null, actual.Release.Name);
    //        Assert.Equal(false, actual.Release.Draft);
    //        Assert.Equal("baxterthehacker", actual.Release.Author.Login);
    //        Assert.Equal(6752317, actual.Release.Author.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Release.Author.AvatarUrl);
    //        Assert.Equal("", actual.Release.Author.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Release.Author.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Release.Author.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Release.Author.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Release.Author.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Release.Author.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Release.Author.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Release.Author.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Release.Author.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Release.Author.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Release.Author.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Release.Author.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Release.Author.Type);
    //        Assert.Equal(false, actual.Release.Author.SiteAdmin);
    //        Assert.Equal(false, actual.Release.Prerelease);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Release.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:38z"), actual.Release.PublishedAt);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tarball/0.0.1", actual.Release.TarballUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/zipball/0.0.1", actual.Release.ZipballUrl);
    //        Assert.Equal(null, actual.Release.Body);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:38z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class RepositoryEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<RepositoryEventPayload>("RepositoryEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal(27496774, actual.Repository.Id);
    //        Assert.Equal("new-repository", actual.Repository.Name);
    //        Assert.Equal("baxterandthehackers/new-repository", actual.Repository.FullName);
    //        Assert.Equal("baxterandthehackers", actual.Repository.Owner.Login);
    //        Assert.Equal(7649605, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal("Organization", actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(true, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterandthehackers/new-repository", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/issues/comments/{number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/new-repository/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2014/12/03 16:39:25z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2014/12/03 16:39:25z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2014/12/03 16:39:25z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterandthehackers/new-repository.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterandthehackers/new-repository.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/new-repository.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/new-repository", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(false, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class StatusEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<StatusEventPayload>("StatusEvent.json");
    //        Assert.Equal(214015194, actual.Id);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Sha);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Name);
    //        Assert.Equal(null, actual.TargetUrl);
    //        Assert.Equal("default", actual.Context);
    //        Assert.Equal(null, actual.Description);
    //        Assert.Equal("success", actual.State);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Sha);
    //        Assert.Equal("baxterthehacker", actual.Commit.Commit.Author.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commit.Commit.Author.Email);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Commit.Commit.Author.Date);
    //        Assert.Equal("baxterthehacker", actual.Commit.Commit.Committer.Name);
    //        Assert.Equal("baxterthehacker@users.noreply.github.com", actual.Commit.Commit.Committer.Email);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Commit.Commit.Committer.Date);
    //        Assert.Equal("Initial commit", actual.Commit.Commit.Message);
    //        Assert.Equal("02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0", actual.Commit.Commit.Tree.Sha);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees/02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0", actual.Commit.Commit.Tree.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Commit.Url);
    //        Assert.Equal(1, actual.Commit.Commit.CommentCount);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.Url);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo/commit/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Commit.HtmlUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b/comments", actual.Commit.CommentsUrl);
    //        Assert.Equal("baxterthehacker", actual.Commit.Author.Login);
    //        Assert.Equal(6752317, actual.Commit.Author.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Commit.Author.AvatarUrl);
    //        Assert.Equal("", actual.Commit.Author.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Commit.Author.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Commit.Author.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Commit.Author.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Commit.Author.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Commit.Author.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Commit.Author.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Commit.Author.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Commit.Author.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Commit.Author.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Commit.Author.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Commit.Author.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Commit.Author.Type);
    //        Assert.Equal(false, actual.Commit.Author.SiteAdmin);
    //        Assert.Equal("baxterthehacker", actual.Commit.Committer.Login);
    //        Assert.Equal(6752317, actual.Commit.Committer.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Commit.Committer.AvatarUrl);
    //        Assert.Equal("", actual.Commit.Committer.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Commit.Committer.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Commit.Committer.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Commit.Committer.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Commit.Committer.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Commit.Committer.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Commit.Committer.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Commit.Committer.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Commit.Committer.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Commit.Committer.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Commit.Committer.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Commit.Committer.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Commit.Committer.Type);
    //        Assert.Equal(false, actual.Commit.Committer.SiteAdmin);
    //        Assert.Equal("master", actual.Branches[0].Name);
    //        Assert.Equal("9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Branches[0].Commit.Sha);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b", actual.Branches[0].Commit.Url);
    //        Assert.Equal("changes", actual.Branches[1].Name);
    //        Assert.Equal("0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Branches[1].Commit.Sha);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c", actual.Branches[1].Commit.Url);
    //        Assert.Equal("gh-pages", actual.Branches[2].Name);
    //        Assert.Equal("b11bb7545ac14abafc6191a0481b0d961e7793c6", actual.Branches[2].Commit.Sha);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits/b11bb7545ac14abafc6191a0481b0d961e7793c6", actual.Branches[2].Commit.Url);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:39z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class TeamAddEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<TeamAddEventPayload>("TeamAddEvent.json");
    //        Assert.Equal("github", actual.Team.Name);
    //        Assert.Equal(836012, actual.Team.Id);
    //        Assert.Equal("github", actual.Team.Slug);
    //        Assert.Equal("", actual.Team.Description);
    //        Assert.Equal("pull", actual.Team.Permission);
    //        Assert.Equal("https://api.github.com/teams/836012", actual.Team.Url);
    //        Assert.Equal("https://api.github.com/teams/836012/members{/member}", actual.Team.MembersUrl);
    //        Assert.Equal("https://api.github.com/teams/836012/repos", actual.Team.RepositoriesUrl);
    //        Assert.Equal(35129393, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterandthehackers/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterandthehackers", actual.Repository.Owner.Login);
    //        Assert.Equal(7649605, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal("Organization", actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(true, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterandthehackers/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterandthehackers/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterandthehackers/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(false, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal(null, actual.Organization.Description);
    //        Assert.Equal("baxterandthehackers", actual.Sender.Login);
    //        Assert.Equal(7649605, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterandthehackers", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterandthehackers/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal("Organization", actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class TeamEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<TeamEventPayload>("TeamEvent.json");
    //        Assert.Equal("created", actual.Action);
    //        Assert.Equal("team baxter", actual.Team.Name);
    //        Assert.Equal(2175394, actual.Team.Id);
    //        Assert.Equal("team-baxter", actual.Team.Slug);
    //        Assert.Equal("", actual.Team.Description);
    //        Assert.Equal("secret", actual.Team.Privacy);
    //        Assert.Equal("https:/api.github.com/teams/2175394", actual.Team.Url);
    //        Assert.Equal("https:/api.github.com/teams/2175394/members{/member}", actual.Team.MembersUrl);
    //        Assert.Equal("https:/api.github.com/teams/2175394/repos", actual.Team.RepositoriesUrl);
    //        Assert.Equal("pull", actual.Team.Permission);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(4312013, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
    //public sealed class WatchEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<WatchEventPayload>("WatchEvent.json");
    //        Assert.Equal("started", actual.Action);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:30z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}
}
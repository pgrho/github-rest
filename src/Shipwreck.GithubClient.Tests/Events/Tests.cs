using System;
using Xunit;

namespace Shipwreck.GithubClient.Events
{
    // TODO: public sealed class MarketplacePurchaseEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<MarketplacePurchaseEventPayload>("MarketplacePurchaseEvent.json");
    //        Assert.Equal("changed", actual.Action);
    //        Assert.Equal(DateTimeOffset.Parse("2017/04/06 2:01:16z"), actual.EffectiveDate);
    //        Assert.Equal(AccountType.Organization, actual.MarketplacePurchase.Account.Type);
    //        Assert.Equal(4, actual.MarketplacePurchase.Account.Id);
    //        Assert.Equal("GitHub", actual.MarketplacePurchase.Account.Login);
    //        Assert.Equal("billing@github.com", actual.MarketplacePurchase.Account.OrganizationBillingEmail);
    //        Assert.Equal("monthly", actual.MarketplacePurchase.BillingCycle);
    //        Assert.Equal(DateTimeOffset.Parse("2017/05/01 0:00:00z"), actual.MarketplacePurchase.NextBillingDate);
    //        Assert.Equal(1, actual.MarketplacePurchase.UnitCount);
    //        Assert.Equal(9, actual.MarketplacePurchase.Plan.Id);
    //        Assert.Equal("Super Pro", actual.MarketplacePurchase.Plan.Name);
    //        Assert.Equal("A really, super professional-grade CI solution", actual.MarketplacePurchase.Plan.Description);
    //        Assert.Equal(9999, actual.MarketplacePurchase.Plan.MonthlyPriceInCents);
    //        Assert.Equal(11998, actual.MarketplacePurchase.Plan.YearlyPriceInCents);
    //        Assert.Equal("flat-rate", actual.MarketplacePurchase.Plan.PriceModel);
    //        Assert.Equal(null, actual.MarketplacePurchase.Plan.UnitName);
    //        Assert.Equal(AccountType.Organization, actual.PreviousMarketplacePurchase.Account.Type);
    //        Assert.Equal(4, actual.PreviousMarketplacePurchase.Account.Id);
    //        Assert.Equal("GitHub", actual.PreviousMarketplacePurchase.Account.Login);
    //        Assert.Equal("monthly", actual.PreviousMarketplacePurchase.BillingCycle);
    //        Assert.Equal(DateTimeOffset.Parse("2017/05/01 0:00:00z"), actual.PreviousMarketplacePurchase.NextBillingDate);
    //        Assert.Equal(1, actual.PreviousMarketplacePurchase.UnitCount);
    //        Assert.Equal(9, actual.PreviousMarketplacePurchase.Plan.Id);
    //        Assert.Equal("Super Pro", actual.PreviousMarketplacePurchase.Plan.Name);
    //        Assert.Equal("A really, super professional-grade CI solution", actual.PreviousMarketplacePurchase.Plan.Description);
    //        Assert.Equal(9999, actual.PreviousMarketplacePurchase.Plan.MonthlyPriceInCents);
    //        Assert.Equal(11998, actual.PreviousMarketplacePurchase.Plan.YearlyPriceInCents);
    //        Assert.Equal("flat-rate", actual.PreviousMarketplacePurchase.Plan.PriceModel);
    //        Assert.Equal(null, actual.PreviousMarketplacePurchase.Plan.UnitName);
    //        Assert.Equal(1, actual.Sender.Id);
    //        Assert.Equal("octocat", actual.Sender.Login);
    //        Assert.Equal("octocat@github.com", actual.Sender.Email);
    //    }
    //}

    // TODO:public sealed class OrganizationEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<OrganizationEventPayload>("OrganizationEvent.json");
    //        Assert.Equal("member_invited", actual.Action);
    //        Assert.Equal(3294302, actual.Invitation.Id);
    //        Assert.Equal("baxterthehacker", actual.Invitation.Login);
    //        Assert.Equal(null, actual.Invitation.Email);
    //        Assert.Equal("direct_member", actual.Invitation.Role);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/memberships/baxterthehacker", actual.Membership.Url);
    //        Assert.Equal("active", actual.Membership.State);
    //        Assert.Equal("member", actual.Membership.Role);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Membership.OrganizationUrl);
    //        Assert.Equal("baxterthehacker", actual.Membership.User.Login);
    //        Assert.Equal(7649605, actual.Membership.User.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/17085448?v=3", actual.Membership.User.AvatarUrl);
    //        Assert.Equal("", actual.Membership.User.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Membership.User.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Membership.User.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Membership.User.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Membership.User.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Membership.User.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Membership.User.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Membership.User.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Membership.User.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Membership.User.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Membership.User.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Membership.User.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Membership.User.Type);
    //        Assert.Equal(false, actual.Membership.User.SiteAdmin);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(4312013, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4312013?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(7649605, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(true, actual.Sender.SiteAdmin);
    //    }
    //}

    //TODO:public sealed class OrganizationBlockPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<OrganizationBlockPayload>("OrgBlockEvent.json");
    //        Assert.Equal("blocked", actual.Action);
    //        Assert.Equal("octocat", actual.BlockedUser.Login);
    //        Assert.Equal(583231, actual.BlockedUser.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/583231?v=3", actual.BlockedUser.AvatarUrl);
    //        Assert.Equal("", actual.BlockedUser.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octocat", actual.BlockedUser.Url);
    //        Assert.Equal("https://github.com/octocat", actual.BlockedUser.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/followers", actual.BlockedUser.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/following{/other_user}", actual.BlockedUser.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/gists{/gist_id}", actual.BlockedUser.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/starred{/owner}{/repo}", actual.BlockedUser.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/subscriptions", actual.BlockedUser.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/orgs", actual.BlockedUser.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/repos", actual.BlockedUser.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/events{/privacy}", actual.BlockedUser.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octocat/received_events", actual.BlockedUser.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.BlockedUser.Type);
    //        Assert.Equal(false, actual.BlockedUser.SiteAdmin);
    //        Assert.Equal("github", actual.Organization.Login);
    //        Assert.Equal(4366038, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/github", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/github/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/hooks", actual.Organization.HooksUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/issues", actual.Organization.IssuesUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/github/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/4366038?v=3", actual.Organization.AvatarUrl);
    //        Assert.Equal("", actual.Organization.Description);
    //        Assert.Equal("octodocs", actual.Sender.Login);
    //        Assert.Equal(25781999, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/25781999?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/octodocs", actual.Sender.Url);
    //        Assert.Equal("https://github.com/octodocs", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/octodocs/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}

    //TODO:public sealed class PageBuildEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<PageBuildEventPayload>("PageBuildEvent.json");
    //        Assert.Equal(15995382, actual.Id);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pages/builds/15995382", actual.Build.Url);
    //        Assert.Equal("built", actual.Build.Status);
    //        Assert.Equal(null, actual.Build.Error.Message);
    //        Assert.Equal("baxterthehacker", actual.Build.Pusher.Login);
    //        Assert.Equal(6752317, actual.Build.Pusher.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Build.Pusher.AvatarUrl);
    //        Assert.Equal("", actual.Build.Pusher.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Build.Pusher.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Build.Pusher.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Build.Pusher.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Build.Pusher.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Build.Pusher.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Build.Pusher.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Build.Pusher.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Build.Pusher.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Build.Pusher.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Build.Pusher.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Build.Pusher.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Build.Pusher.Type);
    //        Assert.Equal(false, actual.Build.Pusher.SiteAdmin);
    //        Assert.Equal("053b99542c83021d6b202d1a1f5ecd5ef7084e55", actual.Build.Commit);
    //        Assert.Equal(3790, actual.Build.Duration);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:13z"), actual.Build.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:17z"), actual.Build.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:17z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(0, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(0, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}

    //TODO:public sealed class ProjectCardEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectCardEventPayload>("ProjectCardEvent.json");
    //        Assert.Equal(EditAction.Created, actual.Action);
    //        Assert.Equal("https://api.github.com/projects/columns/cards/1266091", actual.ProjectCard.Url);
    //        Assert.Equal("https://api.github.com/projects/columns/515520", actual.ProjectCard.ColumnUrl);
    //        Assert.Equal(515520, actual.ProjectCard.ColumnId);
    //        Assert.Equal(1266091, actual.ProjectCard.Id);
    //        Assert.Equal(null, actual.ProjectCard.Note);
    //        Assert.Equal("baxterthehacker", actual.ProjectCard.Creator.Login);
    //        Assert.Equal(6752317, actual.ProjectCard.Creator.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.ProjectCard.Creator.AvatarUrl);
    //        Assert.Equal("", actual.ProjectCard.Creator.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.ProjectCard.Creator.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.ProjectCard.Creator.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.ProjectCard.Creator.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.ProjectCard.Creator.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.ProjectCard.Creator.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.ProjectCard.Creator.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.ProjectCard.Creator.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.ProjectCard.Creator.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.ProjectCard.Creator.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.ProjectCard.Creator.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.ProjectCard.Creator.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.ProjectCard.Creator.Type);
    //        Assert.Equal(false, actual.ProjectCard.Creator.SiteAdmin);
    //        Assert.Equal(1483569391, actual.ProjectCard.CreatedAt);
    //        Assert.Equal(1483569391, actual.ProjectCard.UpdatedAt);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/2", actual.ProjectCard.ContentUrl);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}

    //TODO:public sealed class ProjectColumnEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectColumnEventPayload>("ProjectColumnEvent.json");
    //        Assert.Equal(EditAction.Created, actual.Action);
    //        Assert.Equal("https://api.github.com/projects/columns/515520", actual.ProjectColumn.Url);
    //        Assert.Equal("https://api.github.com/projects/288065", actual.ProjectColumn.ProjectUrl);
    //        Assert.Equal("https://api.github.com/projects/columns/515520/cards", actual.ProjectColumn.CardsUrl);
    //        Assert.Equal(515520, actual.ProjectColumn.Id);
    //        Assert.Equal("High Priority", actual.ProjectColumn.Name);
    //        Assert.Equal(1483569138, actual.ProjectColumn.CreatedAt);
    //        Assert.Equal(1483569138, actual.ProjectColumn.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}

    //TODO:public sealed class ProjectEventPayloadTest : ActivityPayloadTest
    //{
    //    [Fact]
    //    public void SampleDataTest()
    //    {
    //        var actual = ReadAs<ProjectEventPayload>("ProjectEvent.json");
    //        Assert.Equal(EditAction.Created, actual.Action);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Project.OwnerUrl);
    //        Assert.Equal("https://api.github.com/projects/288065", actual.Project.Url);
    //        Assert.Equal("https://api.github.com/projects/288065/columns", actual.Project.ColumnsUrl);
    //        Assert.Equal(288065, actual.Project.Id);
    //        Assert.Equal("2017", actual.Project.Name);
    //        Assert.Equal("Roadmap for work to be done in 2017", actual.Project.Body);
    //        Assert.Equal(10, actual.Project.Number);
    //        Assert.Equal(ItemState.Open, actual.Project.State);
    //        Assert.Equal("baxterthehacker", actual.Project.Creator.Login);
    //        Assert.Equal(6752317, actual.Project.Creator.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Project.Creator.AvatarUrl);
    //        Assert.Equal("", actual.Project.Creator.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Project.Creator.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Project.Creator.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Project.Creator.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Project.Creator.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Project.Creator.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Project.Creator.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Project.Creator.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Project.Creator.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Project.Creator.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Project.Creator.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Project.Creator.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Project.Creator.Type);
    //        Assert.Equal(false, actual.Project.Creator.SiteAdmin);
    //        Assert.Equal(1483567089, actual.Project.CreatedAt);
    //        Assert.Equal(1483567089, actual.Project.UpdatedAt);
    //        Assert.Equal(35129377, actual.Repository.Id);
    //        Assert.Equal("public-repo", actual.Repository.Name);
    //        Assert.Equal("baxterthehacker/public-repo", actual.Repository.FullName);
    //        Assert.Equal("baxterthehacker", actual.Repository.Owner.Login);
    //        Assert.Equal(6752317, actual.Repository.Owner.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=3", actual.Repository.Owner.AvatarUrl);
    //        Assert.Equal("", actual.Repository.Owner.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Repository.Owner.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Repository.Owner.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Repository.Owner.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Repository.Owner.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Repository.Owner.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Repository.Owner.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Repository.Owner.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Repository.Owner.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Repository.Owner.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Repository.Owner.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Repository.Owner.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Repository.Owner.Type);
    //        Assert.Equal(false, actual.Repository.Owner.SiteAdmin);
    //        Assert.Equal(false, actual.Repository.Private);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.HtmlUrl);
    //        Assert.Equal("", actual.Repository.Description);
    //        Assert.Equal(false, actual.Repository.Fork);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo", actual.Repository.Url);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/forks", actual.Repository.ForksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}", actual.Repository.KeysUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}", actual.Repository.CollaboratorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/teams", actual.Repository.TeamsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/hooks", actual.Repository.HooksUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}", actual.Repository.IssueEventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/events", actual.Repository.EventsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}", actual.Repository.AssigneesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}", actual.Repository.BranchesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/tags", actual.Repository.TagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}", actual.Repository.BlobsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}", actual.Repository.GitTagsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}", actual.Repository.GitRefsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}", actual.Repository.TreesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}", actual.Repository.StatusesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/languages", actual.Repository.LanguagesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/stargazers", actual.Repository.StargazersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contributors", actual.Repository.ContributorsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscribers", actual.Repository.SubscribersUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/subscription", actual.Repository.SubscriptionUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}", actual.Repository.CommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}", actual.Repository.GitCommitsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}", actual.Repository.CommentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}", actual.Repository.IssueCommentUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}", actual.Repository.ContentsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}", actual.Repository.CompareUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/merges", actual.Repository.MergesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}", actual.Repository.ArchiveUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/downloads", actual.Repository.DownloadsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}", actual.Repository.IssuesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}", actual.Repository.PullsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}", actual.Repository.MilestonesUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}", actual.Repository.NotificationsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}", actual.Repository.LabelsUrl);
    //        Assert.Equal("https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}", actual.Repository.ReleasesUrl);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.CreatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:12z"), actual.Repository.UpdatedAt);
    //        Assert.Equal(DateTimeOffset.Parse("2015/05/05 23:40:27z"), actual.Repository.PushedAt);
    //        Assert.Equal("git://github.com/baxterthehacker/public-repo.git", actual.Repository.GitUrl);
    //        Assert.Equal("git@github.com:baxterthehacker/public-repo.git", actual.Repository.SshUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo.git", actual.Repository.CloneUrl);
    //        Assert.Equal("https://github.com/baxterthehacker/public-repo", actual.Repository.SvnUrl);
    //        Assert.Equal(null, actual.Repository.Homepage);
    //        Assert.Equal(0, actual.Repository.Size);
    //        Assert.Equal(0, actual.Repository.StargazersCount);
    //        Assert.Equal(0, actual.Repository.WatchersCount);
    //        Assert.Equal(null, actual.Repository.Language);
    //        Assert.Equal(true, actual.Repository.HasIssues);
    //        Assert.Equal(true, actual.Repository.HasDownloads);
    //        Assert.Equal(true, actual.Repository.HasWiki);
    //        Assert.Equal(true, actual.Repository.HasPages);
    //        Assert.Equal(0, actual.Repository.ForksCount);
    //        Assert.Equal(null, actual.Repository.MirrorUrl);
    //        Assert.Equal(2, actual.Repository.OpenIssuesCount);
    //        Assert.Equal(0, actual.Repository.Forks);
    //        Assert.Equal(2, actual.Repository.OpenIssues);
    //        Assert.Equal(0, actual.Repository.Watchers);
    //        Assert.Equal("master", actual.Repository.DefaultBranch);
    //        Assert.Equal("baxterandthehackers", actual.Organization.Login);
    //        Assert.Equal(7649605, actual.Organization.Id);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers", actual.Organization.Url);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/repos", actual.Organization.ReposUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/events", actual.Organization.EventsUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/members{/member}", actual.Organization.MembersUrl);
    //        Assert.Equal("https://api.github.com/orgs/baxterandthehackers/public_members{/member}", actual.Organization.PublicMembersUrl);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/7649605?v=2", actual.Organization.AvatarUrl);
    //        Assert.Equal("baxterthehacker", actual.Sender.Login);
    //        Assert.Equal(6752317, actual.Sender.Id);
    //        Assert.Equal("https://avatars.githubusercontent.com/u/6752317?v=2", actual.Sender.AvatarUrl);
    //        Assert.Equal("", actual.Sender.GravatarId);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker", actual.Sender.Url);
    //        Assert.Equal("https://github.com/baxterthehacker", actual.Sender.HtmlUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/followers", actual.Sender.FollowersUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/following{/other_user}", actual.Sender.FollowingUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/gists{/gist_id}", actual.Sender.GistsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}", actual.Sender.StarredUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/subscriptions", actual.Sender.SubscriptionsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/orgs", actual.Sender.OrganizationsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/repos", actual.Sender.ReposUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/events{/privacy}", actual.Sender.EventsUrl);
    //        Assert.Equal("https://api.github.com/users/baxterthehacker/received_events", actual.Sender.ReceivedEventsUrl);
    //        Assert.Equal(AccountType.User, actual.Sender.Type);
    //        Assert.Equal(false, actual.Sender.SiteAdmin);
    //    }
    //}

}